/*
 * This file is generated by jOOQ.
 */
package main.java.com.jooqpoc.local.tables;

import javax.annotation.Generated;

import main.java.com.jooqpoc.local.tables.records.ClientRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.9.0" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Client extends TableImpl<ClientRecord> {

	private static final long serialVersionUID = 128925804;

	/**
	 * The reference instance of <code>library.client</code>
	 */
	public static final Client CLIENT = new Client();

	/**
	 * The column <code>library.client.id</code>.
	 */
	public final TableField<ClientRecord, Integer> ID = createField("id",
			org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>library.client.first_name</code>.
	 */
	public final TableField<ClientRecord, String> FIRST_NAME = createField(
			"first_name", org.jooq.impl.SQLDataType.VARCHAR.length(100)
					.nullable(false), this, "");

	/**
	 * The column <code>library.client.last_name</code>.
	 */
	public final TableField<ClientRecord, String> LAST_NAME = createField(
			"last_name", org.jooq.impl.SQLDataType.VARCHAR.length(255)
					.nullable(false), this, "");

	/**
	 * Create a <code>library.client</code> table reference
	 */
	public Client() {
		this("client", null);
	}

	/**
	 * Create an aliased <code>library.client</code> table reference
	 */
	public Client(String alias) {
		this(alias, CLIENT);
	}

	private Client(String alias, Table<ClientRecord> aliased) {
		this(alias, aliased, null);
	}

	private Client(String alias, Table<ClientRecord> aliased,
			Field<?>[] parameters) {
		super(alias, null, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Client as(String alias) {
		return new Client(alias, this);
	}

	// /**
	// * {@inheritDoc}
	// */
	// @Override
	// public Schema getSchema() {
	// return Library.LIBRARY;
	// }
	//
	// /**
	// * {@inheritDoc}
	// */
	// @Override
	// public Identity<ClientRecord, Integer> getIdentity() {
	// return Keys.IDENTITY_AUTHOR;
	// }
	//
	// /**
	// * {@inheritDoc}
	// */
	// @Override
	// public UniqueKey<ClientRecord> getPrimaryKey() {
	// return Keys.KEY_AUTHOR_PRIMARY;
	// }
	//
	// /**
	// * {@inheritDoc}
	// */
	// @Override
	// public List<UniqueKey<ClientRecord>> getKeys() {
	// return Arrays.<UniqueKey<ClientRecord>>asList(Keys.KEY_AUTHOR_PRIMARY);
	// }

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ClientRecord> getRecordType() {
		return ClientRecord.class;
	}

	/**
	 * Rename this table
	 */
	@Override
	public Client rename(String name) {
		return new Client(name, null);
	}
}
